<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Flownative\Kubernetes\Api\Model;

class IoK8sApiCoreV1EnvFromSource
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.
     *
     * The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
     *
     * @var IoK8sApiCoreV1ConfigMapEnvSource|null
     */
    protected $configMapRef;
    /**
     * Optional text to prepend to the name of each environment variable. Must be a C_IDENTIFIER.
     *
     * @var string|null
     */
    protected $prefix;
    /**
     * SecretEnvSource selects a Secret to populate the environment variables with.
     *
     * The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
     *
     * @var IoK8sApiCoreV1SecretEnvSource|null
     */
    protected $secretRef;

    /**
     * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.
     *
     * The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
     */
    public function getConfigMapRef(): ?IoK8sApiCoreV1ConfigMapEnvSource
    {
        return $this->configMapRef;
    }

    /**
     * ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.
     *
     * The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
     */
    public function setConfigMapRef(?IoK8sApiCoreV1ConfigMapEnvSource $configMapRef): self
    {
        $this->initialized['configMapRef'] = true;
        $this->configMapRef = $configMapRef;

        return $this;
    }

    /**
     * Optional text to prepend to the name of each environment variable. Must be a C_IDENTIFIER.
     */
    public function getPrefix(): ?string
    {
        return $this->prefix;
    }

    /**
     * Optional text to prepend to the name of each environment variable. Must be a C_IDENTIFIER.
     */
    public function setPrefix(?string $prefix): self
    {
        $this->initialized['prefix'] = true;
        $this->prefix = $prefix;

        return $this;
    }

    /**
     * SecretEnvSource selects a Secret to populate the environment variables with.
     *
     * The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
     */
    public function getSecretRef(): ?IoK8sApiCoreV1SecretEnvSource
    {
        return $this->secretRef;
    }

    /**
     * SecretEnvSource selects a Secret to populate the environment variables with.
     *
     * The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
     */
    public function setSecretRef(?IoK8sApiCoreV1SecretEnvSource $secretRef): self
    {
        $this->initialized['secretRef'] = true;
        $this->secretRef = $secretRef;

        return $this;
    }
}
