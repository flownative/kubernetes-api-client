<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Flownative\Kubernetes\Api\Model;

class IoK8sApiAppsV1Deployment
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources.
     *
     * @var string|null
     */
    protected $apiVersion;
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds.
     *
     * @var string|null
     */
    protected $kind;
    /**
     * ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
     *
     * @var IoK8sApimachineryPkgApisMetaV1ObjectMeta|null
     */
    protected $metadata;
    /**
     * DeploymentSpec is the specification of the desired behavior of the Deployment.
     *
     * @var IoK8sApiAppsV1DeploymentSpec|null
     */
    protected $spec;
    /**
     * DeploymentStatus is the most recently observed status of the Deployment.
     *
     * @var IoK8sApiAppsV1DeploymentStatus|null
     */
    protected $status;

    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources.
     */
    public function getApiVersion(): ?string
    {
        return $this->apiVersion;
    }

    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources.
     */
    public function setApiVersion(?string $apiVersion): self
    {
        $this->initialized['apiVersion'] = true;
        $this->apiVersion = $apiVersion;

        return $this;
    }

    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds.
     */
    public function getKind(): ?string
    {
        return $this->kind;
    }

    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds.
     */
    public function setKind(?string $kind): self
    {
        $this->initialized['kind'] = true;
        $this->kind = $kind;

        return $this;
    }

    /**
     * ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
     */
    public function getMetadata(): ?IoK8sApimachineryPkgApisMetaV1ObjectMeta
    {
        return $this->metadata;
    }

    /**
     * ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.
     */
    public function setMetadata(?IoK8sApimachineryPkgApisMetaV1ObjectMeta $metadata): self
    {
        $this->initialized['metadata'] = true;
        $this->metadata = $metadata;

        return $this;
    }

    /**
     * DeploymentSpec is the specification of the desired behavior of the Deployment.
     */
    public function getSpec(): ?IoK8sApiAppsV1DeploymentSpec
    {
        return $this->spec;
    }

    /**
     * DeploymentSpec is the specification of the desired behavior of the Deployment.
     */
    public function setSpec(?IoK8sApiAppsV1DeploymentSpec $spec): self
    {
        $this->initialized['spec'] = true;
        $this->spec = $spec;

        return $this;
    }

    /**
     * DeploymentStatus is the most recently observed status of the Deployment.
     */
    public function getStatus(): ?IoK8sApiAppsV1DeploymentStatus
    {
        return $this->status;
    }

    /**
     * DeploymentStatus is the most recently observed status of the Deployment.
     */
    public function setStatus(?IoK8sApiAppsV1DeploymentStatus $status): self
    {
        $this->initialized['status'] = true;
        $this->status = $status;

        return $this;
    }
}
