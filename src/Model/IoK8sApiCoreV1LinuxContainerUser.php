<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Flownative\Kubernetes\Api\Model;

class IoK8sApiCoreV1LinuxContainerUser
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * GID is the primary gid initially attached to the first process in the container.
     *
     * @var int|null
     */
    protected $gid;
    /**
     * SupplementalGroups are the supplemental groups initially attached to the first process in the container.
     *
     * @var list<int>|null
     */
    protected $supplementalGroups;
    /**
     * UID is the primary uid initially attached to the first process in the container.
     *
     * @var int|null
     */
    protected $uid;

    /**
     * GID is the primary gid initially attached to the first process in the container.
     */
    public function getGid(): ?int
    {
        return $this->gid;
    }

    /**
     * GID is the primary gid initially attached to the first process in the container.
     */
    public function setGid(?int $gid): self
    {
        $this->initialized['gid'] = true;
        $this->gid = $gid;

        return $this;
    }

    /**
     * SupplementalGroups are the supplemental groups initially attached to the first process in the container.
     *
     * @return list<int>|null
     */
    public function getSupplementalGroups(): ?array
    {
        return $this->supplementalGroups;
    }

    /**
     * SupplementalGroups are the supplemental groups initially attached to the first process in the container.
     *
     * @param list<int>|null $supplementalGroups
     */
    public function setSupplementalGroups(?array $supplementalGroups): self
    {
        $this->initialized['supplementalGroups'] = true;
        $this->supplementalGroups = $supplementalGroups;

        return $this;
    }

    /**
     * UID is the primary uid initially attached to the first process in the container.
     */
    public function getUid(): ?int
    {
        return $this->uid;
    }

    /**
     * UID is the primary uid initially attached to the first process in the container.
     */
    public function setUid(?int $uid): self
    {
        $this->initialized['uid'] = true;
        $this->uid = $uid;

        return $this;
    }
}
