<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Flownative\Kubernetes\Api\Model;

class IoK8sApiCoreV1PortStatus
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * Error is to record the problem with the service port The format of the error shall comply with the following rules: - built-in error values shall be specified in this file and those shall use
     * CamelCase names
     * - cloud provider specific error values must have names that comply with the
     * format foo.example.com/CamelCase.
     *
     * @var string|null
     */
    protected $error;
    /**
     * Port is the port number of the service port of which status is recorded here.
     *
     * @var int|null
     */
    protected $port;
    /**
     * Protocol is the protocol of the service port of which status is recorded here The supported values are: "TCP", "UDP", "SCTP".
     *
     * @var string|null
     */
    protected $protocol;

    /**
     * Error is to record the problem with the service port The format of the error shall comply with the following rules: - built-in error values shall be specified in this file and those shall use
     * CamelCase names
     * - cloud provider specific error values must have names that comply with the
     * format foo.example.com/CamelCase.
     */
    public function getError(): ?string
    {
        return $this->error;
    }

    /**
     * Error is to record the problem with the service port The format of the error shall comply with the following rules: - built-in error values shall be specified in this file and those shall use
     * CamelCase names
     * - cloud provider specific error values must have names that comply with the
     * format foo.example.com/CamelCase.
     */
    public function setError(?string $error): self
    {
        $this->initialized['error'] = true;
        $this->error = $error;

        return $this;
    }

    /**
     * Port is the port number of the service port of which status is recorded here.
     */
    public function getPort(): ?int
    {
        return $this->port;
    }

    /**
     * Port is the port number of the service port of which status is recorded here.
     */
    public function setPort(?int $port): self
    {
        $this->initialized['port'] = true;
        $this->port = $port;

        return $this;
    }

    /**
     * Protocol is the protocol of the service port of which status is recorded here The supported values are: "TCP", "UDP", "SCTP".
     */
    public function getProtocol(): ?string
    {
        return $this->protocol;
    }

    /**
     * Protocol is the protocol of the service port of which status is recorded here The supported values are: "TCP", "UDP", "SCTP".
     */
    public function setProtocol(?string $protocol): self
    {
        $this->initialized['protocol'] = true;
        $this->protocol = $protocol;

        return $this;
    }
}
