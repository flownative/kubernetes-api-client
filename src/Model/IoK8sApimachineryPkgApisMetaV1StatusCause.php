<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Flownative\Kubernetes\Api\Model;

class IoK8sApimachineryPkgApisMetaV1StatusCause
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.
     *
     * Examples:
     * "name" - the field "name" on the current resource
     * "items[0].name" - the field "name" on the first array entry in "items"
     *
     * @var string|null
     */
    protected $field;
    /**
     * A human-readable description of the cause of the error.  This field may be presented as-is to a reader.
     *
     * @var string|null
     */
    protected $message;
    /**
     * A machine-readable description of the cause of the error. If this value is empty there is no information available.
     *
     * @var string|null
     */
    protected $reason;

    /**
     * The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.
     *
     * Examples:
     * "name" - the field "name" on the current resource
     * "items[0].name" - the field "name" on the first array entry in "items"
     */
    public function getField(): ?string
    {
        return $this->field;
    }

    /**
     * The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.
     *
     * Examples:
     * "name" - the field "name" on the current resource
     * "items[0].name" - the field "name" on the first array entry in "items"
     */
    public function setField(?string $field): self
    {
        $this->initialized['field'] = true;
        $this->field = $field;

        return $this;
    }

    /**
     * A human-readable description of the cause of the error.  This field may be presented as-is to a reader.
     */
    public function getMessage(): ?string
    {
        return $this->message;
    }

    /**
     * A human-readable description of the cause of the error.  This field may be presented as-is to a reader.
     */
    public function setMessage(?string $message): self
    {
        $this->initialized['message'] = true;
        $this->message = $message;

        return $this;
    }

    /**
     * A machine-readable description of the cause of the error. If this value is empty there is no information available.
     */
    public function getReason(): ?string
    {
        return $this->reason;
    }

    /**
     * A machine-readable description of the cause of the error. If this value is empty there is no information available.
     */
    public function setReason(?string $reason): self
    {
        $this->initialized['reason'] = true;
        $this->reason = $reason;

        return $this;
    }
}
