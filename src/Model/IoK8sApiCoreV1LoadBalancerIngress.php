<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Flownative\Kubernetes\Api\Model;

class IoK8sApiCoreV1LoadBalancerIngress
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * Hostname is set for load-balancer ingress points that are DNS based (typically AWS load-balancers).
     *
     * @var string|null
     */
    protected $hostname;
    /**
     * IP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers).
     *
     * @var string|null
     */
    protected $ip;
    /**
     * IPMode specifies how the load-balancer IP behaves, and may only be specified when the ip field is specified. Setting this to "VIP" indicates that traffic is delivered to the node with the destination set to the load-balancer's IP and port. Setting this to "Proxy" indicates that traffic is delivered to the node or pod with the destination set to the node's IP and node port or the pod's IP and port. Service implementations may use this information to adjust traffic routing.
     *
     * @var string|null
     */
    protected $ipMode;
    /**
     * Ports is a list of records of service ports If used, every port defined in the service should have an entry in it.
     *
     * @var list<IoK8sApiCoreV1PortStatus>|null
     */
    protected $ports;

    /**
     * Hostname is set for load-balancer ingress points that are DNS based (typically AWS load-balancers).
     */
    public function getHostname(): ?string
    {
        return $this->hostname;
    }

    /**
     * Hostname is set for load-balancer ingress points that are DNS based (typically AWS load-balancers).
     */
    public function setHostname(?string $hostname): self
    {
        $this->initialized['hostname'] = true;
        $this->hostname = $hostname;

        return $this;
    }

    /**
     * IP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers).
     */
    public function getIp(): ?string
    {
        return $this->ip;
    }

    /**
     * IP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers).
     */
    public function setIp(?string $ip): self
    {
        $this->initialized['ip'] = true;
        $this->ip = $ip;

        return $this;
    }

    /**
     * IPMode specifies how the load-balancer IP behaves, and may only be specified when the ip field is specified. Setting this to "VIP" indicates that traffic is delivered to the node with the destination set to the load-balancer's IP and port. Setting this to "Proxy" indicates that traffic is delivered to the node or pod with the destination set to the node's IP and node port or the pod's IP and port. Service implementations may use this information to adjust traffic routing.
     */
    public function getIpMode(): ?string
    {
        return $this->ipMode;
    }

    /**
     * IPMode specifies how the load-balancer IP behaves, and may only be specified when the ip field is specified. Setting this to "VIP" indicates that traffic is delivered to the node with the destination set to the load-balancer's IP and port. Setting this to "Proxy" indicates that traffic is delivered to the node or pod with the destination set to the node's IP and node port or the pod's IP and port. Service implementations may use this information to adjust traffic routing.
     */
    public function setIpMode(?string $ipMode): self
    {
        $this->initialized['ipMode'] = true;
        $this->ipMode = $ipMode;

        return $this;
    }

    /**
     * Ports is a list of records of service ports If used, every port defined in the service should have an entry in it.
     *
     * @return list<IoK8sApiCoreV1PortStatus>|null
     */
    public function getPorts(): ?array
    {
        return $this->ports;
    }

    /**
     * Ports is a list of records of service ports If used, every port defined in the service should have an entry in it.
     *
     * @param list<IoK8sApiCoreV1PortStatus>|null $ports
     */
    public function setPorts(?array $ports): self
    {
        $this->initialized['ports'] = true;
        $this->ports = $ports;

        return $this;
    }
}
