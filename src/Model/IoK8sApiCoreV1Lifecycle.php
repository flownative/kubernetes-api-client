<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Flownative\Kubernetes\Api\Model;

class IoK8sApiCoreV1Lifecycle
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * LifecycleHandler defines a specific action that should be taken in a lifecycle hook. One and only one of the fields, except TCPSocket must be specified.
     *
     * @var IoK8sApiCoreV1LifecycleHandler|null
     */
    protected $postStart;
    /**
     * LifecycleHandler defines a specific action that should be taken in a lifecycle hook. One and only one of the fields, except TCPSocket must be specified.
     *
     * @var IoK8sApiCoreV1LifecycleHandler|null
     */
    protected $preStop;
    /**
     * StopSignal defines which signal will be sent to a container when it is being stopped. If not specified, the default is defined by the container runtime in use. StopSignal can only be set for Pods with a non-empty .spec.os.name.
     *
     * @var string|null
     */
    protected $stopSignal;

    /**
     * LifecycleHandler defines a specific action that should be taken in a lifecycle hook. One and only one of the fields, except TCPSocket must be specified.
     */
    public function getPostStart(): ?IoK8sApiCoreV1LifecycleHandler
    {
        return $this->postStart;
    }

    /**
     * LifecycleHandler defines a specific action that should be taken in a lifecycle hook. One and only one of the fields, except TCPSocket must be specified.
     */
    public function setPostStart(?IoK8sApiCoreV1LifecycleHandler $postStart): self
    {
        $this->initialized['postStart'] = true;
        $this->postStart = $postStart;

        return $this;
    }

    /**
     * LifecycleHandler defines a specific action that should be taken in a lifecycle hook. One and only one of the fields, except TCPSocket must be specified.
     */
    public function getPreStop(): ?IoK8sApiCoreV1LifecycleHandler
    {
        return $this->preStop;
    }

    /**
     * LifecycleHandler defines a specific action that should be taken in a lifecycle hook. One and only one of the fields, except TCPSocket must be specified.
     */
    public function setPreStop(?IoK8sApiCoreV1LifecycleHandler $preStop): self
    {
        $this->initialized['preStop'] = true;
        $this->preStop = $preStop;

        return $this;
    }

    /**
     * StopSignal defines which signal will be sent to a container when it is being stopped. If not specified, the default is defined by the container runtime in use. StopSignal can only be set for Pods with a non-empty .spec.os.name.
     */
    public function getStopSignal(): ?string
    {
        return $this->stopSignal;
    }

    /**
     * StopSignal defines which signal will be sent to a container when it is being stopped. If not specified, the default is defined by the container runtime in use. StopSignal can only be set for Pods with a non-empty .spec.os.name.
     */
    public function setStopSignal(?string $stopSignal): self
    {
        $this->initialized['stopSignal'] = true;
        $this->stopSignal = $stopSignal;

        return $this;
    }
}
