<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Flownative\Kubernetes\Api\Model;

class IoK8sApiCoreV1WindowsSecurityContextOptions
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
     *
     * @var string|null
     */
    protected $gmsaCredentialSpec;
    /**
     * GMSACredentialSpecName is the name of the GMSA credential spec to use.
     *
     * @var string|null
     */
    protected $gmsaCredentialSpecName;
    /**
     * HostProcess determines if a container should be run as a 'Host Process' container. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers). In addition, if HostProcess is true then HostNetwork must also be set to true.
     *
     * @var bool|null
     */
    protected $hostProcess;
    /**
     * The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
     *
     * @var string|null
     */
    protected $runAsUserName;

    /**
     * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
     */
    public function getGmsaCredentialSpec(): ?string
    {
        return $this->gmsaCredentialSpec;
    }

    /**
     * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
     */
    public function setGmsaCredentialSpec(?string $gmsaCredentialSpec): self
    {
        $this->initialized['gmsaCredentialSpec'] = true;
        $this->gmsaCredentialSpec = $gmsaCredentialSpec;

        return $this;
    }

    /**
     * GMSACredentialSpecName is the name of the GMSA credential spec to use.
     */
    public function getGmsaCredentialSpecName(): ?string
    {
        return $this->gmsaCredentialSpecName;
    }

    /**
     * GMSACredentialSpecName is the name of the GMSA credential spec to use.
     */
    public function setGmsaCredentialSpecName(?string $gmsaCredentialSpecName): self
    {
        $this->initialized['gmsaCredentialSpecName'] = true;
        $this->gmsaCredentialSpecName = $gmsaCredentialSpecName;

        return $this;
    }

    /**
     * HostProcess determines if a container should be run as a 'Host Process' container. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers). In addition, if HostProcess is true then HostNetwork must also be set to true.
     */
    public function getHostProcess(): ?bool
    {
        return $this->hostProcess;
    }

    /**
     * HostProcess determines if a container should be run as a 'Host Process' container. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers). In addition, if HostProcess is true then HostNetwork must also be set to true.
     */
    public function setHostProcess(?bool $hostProcess): self
    {
        $this->initialized['hostProcess'] = true;
        $this->hostProcess = $hostProcess;

        return $this;
    }

    /**
     * The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
     */
    public function getRunAsUserName(): ?string
    {
        return $this->runAsUserName;
    }

    /**
     * The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
     */
    public function setRunAsUserName(?string $runAsUserName): self
    {
        $this->initialized['runAsUserName'] = true;
        $this->runAsUserName = $runAsUserName;

        return $this;
    }
}
