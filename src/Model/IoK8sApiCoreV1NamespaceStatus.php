<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Flownative\Kubernetes\Api\Model;

class IoK8sApiCoreV1NamespaceStatus
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * Represents the latest available observations of a namespace's current state.
     *
     * @var list<IoK8sApiCoreV1NamespaceCondition>|null
     */
    protected $conditions;
    /**
     * Phase is the current lifecycle phase of the namespace. More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/.
     *
     * @var string|null
     */
    protected $phase;

    /**
     * Represents the latest available observations of a namespace's current state.
     *
     * @return list<IoK8sApiCoreV1NamespaceCondition>|null
     */
    public function getConditions(): ?array
    {
        return $this->conditions;
    }

    /**
     * Represents the latest available observations of a namespace's current state.
     *
     * @param list<IoK8sApiCoreV1NamespaceCondition>|null $conditions
     */
    public function setConditions(?array $conditions): self
    {
        $this->initialized['conditions'] = true;
        $this->conditions = $conditions;

        return $this;
    }

    /**
     * Phase is the current lifecycle phase of the namespace. More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/.
     */
    public function getPhase(): ?string
    {
        return $this->phase;
    }

    /**
     * Phase is the current lifecycle phase of the namespace. More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/.
     */
    public function setPhase(?string $phase): self
    {
        $this->initialized['phase'] = true;
        $this->phase = $phase;

        return $this;
    }
}
