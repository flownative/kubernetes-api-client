<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Flownative\Kubernetes\Api\Model;

class IoK8sApiCoreV1GitRepoVolumeSource
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * directory is the target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
     *
     * @var string|null
     */
    protected $directory;
    /**
     * repository is the URL.
     *
     * @var string|null
     */
    protected $repository;
    /**
     * revision is the commit hash for the specified revision.
     *
     * @var string|null
     */
    protected $revision;

    /**
     * directory is the target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
     */
    public function getDirectory(): ?string
    {
        return $this->directory;
    }

    /**
     * directory is the target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
     */
    public function setDirectory(?string $directory): self
    {
        $this->initialized['directory'] = true;
        $this->directory = $directory;

        return $this;
    }

    /**
     * repository is the URL.
     */
    public function getRepository(): ?string
    {
        return $this->repository;
    }

    /**
     * repository is the URL.
     */
    public function setRepository(?string $repository): self
    {
        $this->initialized['repository'] = true;
        $this->repository = $repository;

        return $this;
    }

    /**
     * revision is the commit hash for the specified revision.
     */
    public function getRevision(): ?string
    {
        return $this->revision;
    }

    /**
     * revision is the commit hash for the specified revision.
     */
    public function setRevision(?string $revision): self
    {
        $this->initialized['revision'] = true;
        $this->revision = $revision;

        return $this;
    }
}
