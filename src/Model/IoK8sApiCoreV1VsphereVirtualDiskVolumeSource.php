<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Flownative\Kubernetes\Api\Model;

class IoK8sApiCoreV1VsphereVirtualDiskVolumeSource
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * fsType is filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
     *
     * @var string|null
     */
    protected $fsType;
    /**
     * storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
     *
     * @var string|null
     */
    protected $storagePolicyID;
    /**
     * storagePolicyName is the storage Policy Based Management (SPBM) profile name.
     *
     * @var string|null
     */
    protected $storagePolicyName;
    /**
     * volumePath is the path that identifies vSphere volume vmdk.
     *
     * @var string|null
     */
    protected $volumePath;

    /**
     * fsType is filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
     */
    public function getFsType(): ?string
    {
        return $this->fsType;
    }

    /**
     * fsType is filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
     */
    public function setFsType(?string $fsType): self
    {
        $this->initialized['fsType'] = true;
        $this->fsType = $fsType;

        return $this;
    }

    /**
     * storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
     */
    public function getStoragePolicyID(): ?string
    {
        return $this->storagePolicyID;
    }

    /**
     * storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
     */
    public function setStoragePolicyID(?string $storagePolicyID): self
    {
        $this->initialized['storagePolicyID'] = true;
        $this->storagePolicyID = $storagePolicyID;

        return $this;
    }

    /**
     * storagePolicyName is the storage Policy Based Management (SPBM) profile name.
     */
    public function getStoragePolicyName(): ?string
    {
        return $this->storagePolicyName;
    }

    /**
     * storagePolicyName is the storage Policy Based Management (SPBM) profile name.
     */
    public function setStoragePolicyName(?string $storagePolicyName): self
    {
        $this->initialized['storagePolicyName'] = true;
        $this->storagePolicyName = $storagePolicyName;

        return $this;
    }

    /**
     * volumePath is the path that identifies vSphere volume vmdk.
     */
    public function getVolumePath(): ?string
    {
        return $this->volumePath;
    }

    /**
     * volumePath is the path that identifies vSphere volume vmdk.
     */
    public function setVolumePath(?string $volumePath): self
    {
        $this->initialized['volumePath'] = true;
        $this->volumePath = $volumePath;

        return $this;
    }
}
