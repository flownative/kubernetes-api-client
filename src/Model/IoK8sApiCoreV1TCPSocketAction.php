<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Flownative\Kubernetes\Api\Model;

class IoK8sApiCoreV1TCPSocketAction
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * Optional: Host name to connect to, defaults to the pod IP.
     *
     * @var string|null
     */
    protected $host;
    /**
     * IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
     *
     * @var string|null
     */
    protected $port;

    /**
     * Optional: Host name to connect to, defaults to the pod IP.
     */
    public function getHost(): ?string
    {
        return $this->host;
    }

    /**
     * Optional: Host name to connect to, defaults to the pod IP.
     */
    public function setHost(?string $host): self
    {
        $this->initialized['host'] = true;
        $this->host = $host;

        return $this;
    }

    /**
     * IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
     */
    public function getPort(): ?string
    {
        return $this->port;
    }

    /**
     * IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.
     */
    public function setPort(?string $port): self
    {
        $this->initialized['port'] = true;
        $this->port = $port;

        return $this;
    }
}
