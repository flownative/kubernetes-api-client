<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Flownative\Kubernetes\Api\Model;

class IoK8sApiAppsV1DeploymentSpec
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready).
     *
     * @var int|null
     */
    protected $minReadySeconds;
    /**
     * Indicates that the deployment is paused.
     *
     * @var bool|null
     */
    protected $paused;
    /**
     * The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.
     *
     * @var int|null
     */
    protected $progressDeadlineSeconds;
    /**
     * Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
     *
     * @var int|null
     */
    protected $replicas;
    /**
     * The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.
     *
     * @var int|null
     */
    protected $revisionHistoryLimit;
    /**
     * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
     *
     * @var IoK8sApimachineryPkgApisMetaV1LabelSelector|null
     */
    protected $selector;
    /**
     * DeploymentStrategy describes how to replace existing pods with new ones.
     *
     * @var IoK8sApiAppsV1DeploymentStrategy|null
     */
    protected $strategy;
    /**
     * PodTemplateSpec describes the data a pod should have when created from a template.
     *
     * @var IoK8sApiCoreV1PodTemplateSpec|null
     */
    protected $template;

    /**
     * Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready).
     */
    public function getMinReadySeconds(): ?int
    {
        return $this->minReadySeconds;
    }

    /**
     * Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready).
     */
    public function setMinReadySeconds(?int $minReadySeconds): self
    {
        $this->initialized['minReadySeconds'] = true;
        $this->minReadySeconds = $minReadySeconds;

        return $this;
    }

    /**
     * Indicates that the deployment is paused.
     */
    public function getPaused(): ?bool
    {
        return $this->paused;
    }

    /**
     * Indicates that the deployment is paused.
     */
    public function setPaused(?bool $paused): self
    {
        $this->initialized['paused'] = true;
        $this->paused = $paused;

        return $this;
    }

    /**
     * The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.
     */
    public function getProgressDeadlineSeconds(): ?int
    {
        return $this->progressDeadlineSeconds;
    }

    /**
     * The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. Defaults to 600s.
     */
    public function setProgressDeadlineSeconds(?int $progressDeadlineSeconds): self
    {
        $this->initialized['progressDeadlineSeconds'] = true;
        $this->progressDeadlineSeconds = $progressDeadlineSeconds;

        return $this;
    }

    /**
     * Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
     */
    public function getReplicas(): ?int
    {
        return $this->replicas;
    }

    /**
     * Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
     */
    public function setReplicas(?int $replicas): self
    {
        $this->initialized['replicas'] = true;
        $this->replicas = $replicas;

        return $this;
    }

    /**
     * The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.
     */
    public function getRevisionHistoryLimit(): ?int
    {
        return $this->revisionHistoryLimit;
    }

    /**
     * The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. Defaults to 10.
     */
    public function setRevisionHistoryLimit(?int $revisionHistoryLimit): self
    {
        $this->initialized['revisionHistoryLimit'] = true;
        $this->revisionHistoryLimit = $revisionHistoryLimit;

        return $this;
    }

    /**
     * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
     */
    public function getSelector(): ?IoK8sApimachineryPkgApisMetaV1LabelSelector
    {
        return $this->selector;
    }

    /**
     * A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
     */
    public function setSelector(?IoK8sApimachineryPkgApisMetaV1LabelSelector $selector): self
    {
        $this->initialized['selector'] = true;
        $this->selector = $selector;

        return $this;
    }

    /**
     * DeploymentStrategy describes how to replace existing pods with new ones.
     */
    public function getStrategy(): ?IoK8sApiAppsV1DeploymentStrategy
    {
        return $this->strategy;
    }

    /**
     * DeploymentStrategy describes how to replace existing pods with new ones.
     */
    public function setStrategy(?IoK8sApiAppsV1DeploymentStrategy $strategy): self
    {
        $this->initialized['strategy'] = true;
        $this->strategy = $strategy;

        return $this;
    }

    /**
     * PodTemplateSpec describes the data a pod should have when created from a template.
     */
    public function getTemplate(): ?IoK8sApiCoreV1PodTemplateSpec
    {
        return $this->template;
    }

    /**
     * PodTemplateSpec describes the data a pod should have when created from a template.
     */
    public function setTemplate(?IoK8sApiCoreV1PodTemplateSpec $template): self
    {
        $this->initialized['template'] = true;
        $this->template = $template;

        return $this;
    }
}
