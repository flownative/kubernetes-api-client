<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Flownative\Kubernetes\Api\Model;

class IoK8sApiCoreV1PodDNSConfig
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
     *
     * @var list<string>|null
     */
    protected $nameservers;
    /**
     * A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
     *
     * @var list<IoK8sApiCoreV1PodDNSConfigOption>|null
     */
    protected $options;
    /**
     * A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
     *
     * @var list<string>|null
     */
    protected $searches;

    /**
     * A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
     *
     * @return list<string>|null
     */
    public function getNameservers(): ?array
    {
        return $this->nameservers;
    }

    /**
     * A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
     *
     * @param list<string>|null $nameservers
     */
    public function setNameservers(?array $nameservers): self
    {
        $this->initialized['nameservers'] = true;
        $this->nameservers = $nameservers;

        return $this;
    }

    /**
     * A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
     *
     * @return list<IoK8sApiCoreV1PodDNSConfigOption>|null
     */
    public function getOptions(): ?array
    {
        return $this->options;
    }

    /**
     * A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
     *
     * @param list<IoK8sApiCoreV1PodDNSConfigOption>|null $options
     */
    public function setOptions(?array $options): self
    {
        $this->initialized['options'] = true;
        $this->options = $options;

        return $this;
    }

    /**
     * A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
     *
     * @return list<string>|null
     */
    public function getSearches(): ?array
    {
        return $this->searches;
    }

    /**
     * A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
     *
     * @param list<string>|null $searches
     */
    public function setSearches(?array $searches): self
    {
        $this->initialized['searches'] = true;
        $this->searches = $searches;

        return $this;
    }
}
