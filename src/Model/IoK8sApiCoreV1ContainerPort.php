<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Flownative\Kubernetes\Api\Model;

class IoK8sApiCoreV1ContainerPort
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
     *
     * @var int|null
     */
    protected $containerPort;
    /**
     * What host IP to bind the external port to.
     *
     * @var string|null
     */
    protected $hostIP;
    /**
     * Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
     *
     * @var int|null
     */
    protected $hostPort;
    /**
     * If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
     *
     * @var string|null
     */
    protected $name;
    /**
     * Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
     *
     * @var string|null
     */
    protected $protocol;

    /**
     * Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
     */
    public function getContainerPort(): ?int
    {
        return $this->containerPort;
    }

    /**
     * Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
     */
    public function setContainerPort(?int $containerPort): self
    {
        $this->initialized['containerPort'] = true;
        $this->containerPort = $containerPort;

        return $this;
    }

    /**
     * What host IP to bind the external port to.
     */
    public function getHostIP(): ?string
    {
        return $this->hostIP;
    }

    /**
     * What host IP to bind the external port to.
     */
    public function setHostIP(?string $hostIP): self
    {
        $this->initialized['hostIP'] = true;
        $this->hostIP = $hostIP;

        return $this;
    }

    /**
     * Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
     */
    public function getHostPort(): ?int
    {
        return $this->hostPort;
    }

    /**
     * Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
     */
    public function setHostPort(?int $hostPort): self
    {
        $this->initialized['hostPort'] = true;
        $this->hostPort = $hostPort;

        return $this;
    }

    /**
     * If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
     */
    public function setName(?string $name): self
    {
        $this->initialized['name'] = true;
        $this->name = $name;

        return $this;
    }

    /**
     * Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
     */
    public function getProtocol(): ?string
    {
        return $this->protocol;
    }

    /**
     * Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
     */
    public function setProtocol(?string $protocol): self
    {
        $this->initialized['protocol'] = true;
        $this->protocol = $protocol;

        return $this;
    }
}
