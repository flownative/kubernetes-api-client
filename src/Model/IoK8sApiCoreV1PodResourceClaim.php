<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Flownative\Kubernetes\Api\Model;

class IoK8sApiCoreV1PodResourceClaim
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * Name uniquely identifies this resource claim inside the pod. This must be a DNS_LABEL.
     *
     * @var string|null
     */
    protected $name;
    /**
     * ResourceClaimName is the name of a ResourceClaim object in the same namespace as this pod.
     *
     * Exactly one of ResourceClaimName and ResourceClaimTemplateName must be set.
     *
     * @var string|null
     */
    protected $resourceClaimName;
    /**
     * ResourceClaimTemplateName is the name of a ResourceClaimTemplate object in the same namespace as this pod.
     *
     * The template will be used to create a new ResourceClaim, which will be bound to this pod. When this pod is deleted, the ResourceClaim will also be deleted. The pod name and resource name, along with a generated component, will be used to form a unique name for the ResourceClaim, which will be recorded in pod.status.resourceClaimStatuses.
     *
     * This field is immutable and no changes will be made to the corresponding ResourceClaim by the control plane after creating the ResourceClaim.
     *
     * Exactly one of ResourceClaimName and ResourceClaimTemplateName must be set.
     *
     * @var string|null
     */
    protected $resourceClaimTemplateName;

    /**
     * Name uniquely identifies this resource claim inside the pod. This must be a DNS_LABEL.
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * Name uniquely identifies this resource claim inside the pod. This must be a DNS_LABEL.
     */
    public function setName(?string $name): self
    {
        $this->initialized['name'] = true;
        $this->name = $name;

        return $this;
    }

    /**
     * ResourceClaimName is the name of a ResourceClaim object in the same namespace as this pod.
     *
     * Exactly one of ResourceClaimName and ResourceClaimTemplateName must be set.
     */
    public function getResourceClaimName(): ?string
    {
        return $this->resourceClaimName;
    }

    /**
     * ResourceClaimName is the name of a ResourceClaim object in the same namespace as this pod.
     *
     * Exactly one of ResourceClaimName and ResourceClaimTemplateName must be set.
     */
    public function setResourceClaimName(?string $resourceClaimName): self
    {
        $this->initialized['resourceClaimName'] = true;
        $this->resourceClaimName = $resourceClaimName;

        return $this;
    }

    /**
     * ResourceClaimTemplateName is the name of a ResourceClaimTemplate object in the same namespace as this pod.
     *
     * The template will be used to create a new ResourceClaim, which will be bound to this pod. When this pod is deleted, the ResourceClaim will also be deleted. The pod name and resource name, along with a generated component, will be used to form a unique name for the ResourceClaim, which will be recorded in pod.status.resourceClaimStatuses.
     *
     * This field is immutable and no changes will be made to the corresponding ResourceClaim by the control plane after creating the ResourceClaim.
     *
     * Exactly one of ResourceClaimName and ResourceClaimTemplateName must be set.
     */
    public function getResourceClaimTemplateName(): ?string
    {
        return $this->resourceClaimTemplateName;
    }

    /**
     * ResourceClaimTemplateName is the name of a ResourceClaimTemplate object in the same namespace as this pod.
     *
     * The template will be used to create a new ResourceClaim, which will be bound to this pod. When this pod is deleted, the ResourceClaim will also be deleted. The pod name and resource name, along with a generated component, will be used to form a unique name for the ResourceClaim, which will be recorded in pod.status.resourceClaimStatuses.
     *
     * This field is immutable and no changes will be made to the corresponding ResourceClaim by the control plane after creating the ResourceClaim.
     *
     * Exactly one of ResourceClaimName and ResourceClaimTemplateName must be set.
     */
    public function setResourceClaimTemplateName(?string $resourceClaimTemplateName): self
    {
        $this->initialized['resourceClaimTemplateName'] = true;
        $this->resourceClaimTemplateName = $resourceClaimTemplateName;

        return $this;
    }
}
