<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Flownative\Kubernetes\Api\Model;

class IoK8sApiCoreV1AppArmorProfile
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * localhostProfile indicates a profile loaded on the node that should be used. The profile must be preconfigured on the node to work. Must match the loaded name of the profile. Must be set if and only if type is "Localhost".
     *
     * @var string|null
     */
    protected $localhostProfile;
    /**
     * type indicates which kind of AppArmor profile will be applied. Valid options are:
     * Localhost - a profile pre-loaded on the node.
     * RuntimeDefault - the container runtime's default profile.
     * Unconfined - no AppArmor enforcement.
     *
     * @var string|null
     */
    protected $type;

    /**
     * localhostProfile indicates a profile loaded on the node that should be used. The profile must be preconfigured on the node to work. Must match the loaded name of the profile. Must be set if and only if type is "Localhost".
     */
    public function getLocalhostProfile(): ?string
    {
        return $this->localhostProfile;
    }

    /**
     * localhostProfile indicates a profile loaded on the node that should be used. The profile must be preconfigured on the node to work. Must match the loaded name of the profile. Must be set if and only if type is "Localhost".
     */
    public function setLocalhostProfile(?string $localhostProfile): self
    {
        $this->initialized['localhostProfile'] = true;
        $this->localhostProfile = $localhostProfile;

        return $this;
    }

    /**
     * type indicates which kind of AppArmor profile will be applied. Valid options are:
     * Localhost - a profile pre-loaded on the node.
     * RuntimeDefault - the container runtime's default profile.
     * Unconfined - no AppArmor enforcement.
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * type indicates which kind of AppArmor profile will be applied. Valid options are:
     * Localhost - a profile pre-loaded on the node.
     * RuntimeDefault - the container runtime's default profile.
     * Unconfined - no AppArmor enforcement.
     */
    public function setType(?string $type): self
    {
        $this->initialized['type'] = true;
        $this->type = $type;

        return $this;
    }
}
